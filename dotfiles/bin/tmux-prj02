# Backup old version
cp -a ~/dotfiles/bin/tmux-prj02 ~/dotfiles/bin/tmux-prj02.bak 2>/dev/null || true

# Write robust, index-agnostic version
cat > ~/dotfiles/bin/tmux-prj02 <<'EOF'
#!/usr/bin/env bash
# Open or create tmux session "prj02" with 4 panes:
# - vertical split, then horizontal split on each side
# - TL: nvim lib/matrix.h
# - TR: nvim src/main.cpp
# - BL: nvim README-milestone1.md
# - BR: shell
set -euo pipefail

SESSION="prj02"

# Optional: always start from project root so relative paths resolve
if [ -d "/workspaces/cs2c-prj02-mjm41" ]; then
  cd /workspaces/cs2c-prj02-mjm41
fi

in_tmux() { [ -n "${TMUX-}" ]; }

if tmux has-session -t "$SESSION" 2>/dev/null; then
  if in_tmux; then tmux switch-client -t "$SESSION"; else tmux attach -t "$SESSION"; fi
  exit 0
fi

# Create session detached with one window in current dir
tmux new-session -d -s "$SESSION" -n editor

# Get the first window index (don't assume base-index)
WIN="$(tmux list-windows -t "$SESSION" -F '#I' | head -n1)"

# Capture the original (left) pane's ID
LEFT="$(tmux display -p -t "${SESSION}:${WIN}" '#{pane_id}')"

# Split vertically to create RIGHT; active pane becomes RIGHT
tmux split-window -h -t "${SESSION}:${WIN}"
RIGHT="$(tmux display -p -t "${SESSION}:${WIN}" '#{pane_id}')"

# Split LEFT horizontally (top-left = LEFT, new bottom-left active)
tmux split-window -v -t "${LEFT}"
# Split RIGHT horizontally (top-right = RIGHT, new bottom-right active)
tmux split-window -v -t "${RIGHT}"

# Send commands by pane ID (robust across pane-base-index settings)
tmux send-keys -t "${LEFT}"  'nvim lib/matrix.h' C-m
tmux send-keys -t "${RIGHT}" 'nvim src/main.cpp' C-m

# Find the BL pane: it's the newest pane in the window that is not LEFT/RIGHT
BL="$(tmux list-panes -t "${SESSION}:${WIN}" -F '#{pane_id} #{pane_active} #{pane_left} #{pane_right} #{pane_top}' \
  | awk '{print $1}' | grep -v -E "^(${LEFT}|${RIGHT})$" | head -n1)"
tmux send-keys -t "${BL}" 'nvim README-milestone1.md' C-m

# Focus TL (LEFT) and attach/switch
tmux select-pane -t "${LEFT}"
if in_tmux; then tmux switch-client -t "$SESSION"; else tmux attach -t "$SESSION"; fi
EOF

chmod +x ~/dotfiles/bin/tmux-prj02
